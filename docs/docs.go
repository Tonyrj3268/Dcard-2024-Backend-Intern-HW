// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ad": {
            "get": {
                "description": "get advertisements by params and conditions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisements"
                ],
                "summary": "Get advertisements",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit\u003c1~100,default=5\u003e",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Age \u003c1~100\u003e",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Gender \u003cenum:M、F\u003e",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country \u003cenum:TW、JP 等符合 https://zh.wikipedia.org/wiki/ISO_3166-1 \u003e",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Platform \u003cenum:android, ios, web\u003e",
                        "name": "platform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/advertisement-api_internal_dto.AdGetResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"params error\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"server error\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new advertisement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisements"
                ],
                "summary": "Create advertisement",
                "parameters": [
                    {
                        "description": "Create Advertisement",
                        "name": "adCreationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement-api_internal_dto.AdCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"success\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"params error\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"server error\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "advertisement-api_internal_dto.AdCondition": {
            "type": "object",
            "properties": {
                "ageEnd": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "ageStart": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "country": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gender": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "platform": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "advertisement-api_internal_dto.AdCreationRequest": {
            "type": "object",
            "required": [
                "endAt",
                "startAt",
                "title"
            ],
            "properties": {
                "conditions": {
                    "$ref": "#/definitions/advertisement-api_internal_dto.AdCondition"
                },
                "endAt": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "advertisement-api_internal_dto.AdGetResponse": {
            "type": "object",
            "properties": {
                "endAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
